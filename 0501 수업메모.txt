프로그래밍 언어 2가지 실행관련 지향 방식
- 실행문
- 표현식문

-콜백함수 : JS 함수 => 1급 시민
  => 함수에 매개변수 함수
  => 콜백함수 : 타입

13. 함수 표현식
- 실행문
- 표현식문
- 다중 패러다임
- 고차함수 / 클로져

14. 기타 함수기능
 - 매개변수를 활용한 구조분해할당 타입정의
 - 함수를 활용한 객체생성법
 - class를 생성할 때 내부 메서드 함수에서 this 객체 사용

15. 배열과 튜플
 - 자료구조에 대한 개념 이야기할 것임. 
 ( 같은 결과를 선언형 방식 vs 명령형 방식 중 어떤 걸로 만들어 낼 것인가. )

 - 배열의 기본 타입 정의
 - 배열 내 객체 아이템 존재 시, 타입정의방법(feat.interface) 
 - 반복문 사용 시 타입정의방법 

 - 제네릭 타입

16. 
- 선언형=함수형 방식(*하이레벨 : 보다 고급 코딩 방법) => 코드의 실행단계를 분리시켜 놓았기 때문에 커스터마이징 가능, 맞춤형 코드 작성, 개발 가능, 버그 발생시 디버깅 편함
- 명령형(그동안 배웠던 방식, 로우레벨) - 커스터마이징 불가.
- 코드구현 방식( feat. 자료구조에 대한 이해 )
 