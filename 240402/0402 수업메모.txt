react.js 실행하기 위해 터미널 켠 후 cmd로 변경후
npx create-react-app "react01" 입력
=> happy hacking! 뜬 후 
=> cd "폴더명" (폴더명으로 들어간다)
=> npm run start 입력
=> react종료하고싶을 때는 npm run build

-삭제를 하고 시작해야하는 데이터 :App.test.js / logo.svg / report~ / setup /React.StrictMode
-컴포넌트로 인식하려면 무조건 앞글자가 대문자이어야 한다. 

- export default "컴포넌트"; - 내보내서 밖에서 쓰고 싶을 때 꼭 입력해주어야 함.

- react에서는 외부스타일 사용빈도가 그렇게 높지 X
style component 와 tailwind 를 더 많이 사용한다.  

- JSX 문법 특징 : 반드시 1개의 부모가 존재해야함. 원시타입 변수는 직접사용 가능, 참조타입 변수 중 객체의 경우는 직접 사용 불가. 

- 조건부 렌더링 가능 / 3항 조건 연산자 많이 사용함. 

- Props(객체의 형태를 띰) : property(속성값)의 약어 ====>  react에서 중요하다!!!!!
* 컴포넌트 간에 데이터를 전달 할 수 있는 기능 
A : a_1 객체를 B에 전달하고 싶을 때 Props 사용
Prop : 규칙 => 부모 컴포넌트가 자식 컴포넌트에게 일방통행으로 데이터 전달 할 수 있음.
* 형제 컴포넌트간에 어떻게 데이터? 따라서 리액트로 페이지 만들때 컴포넌트 구조화 중요!

자식 => 부모 X / 형제 => 형제 X /    ======>   오로지 부모 => 자식 O

=> 이러한 문제점을 해소시키기 위해 useContext / React Hooks / middleware / Redux || Recoil || React query  ==> Redux 를 이해하냐 안하냐가 중요!!!!!

Props : 객체  > key : value => property
==> 구조분해할당을 이용해서 값을 전달하면 아주 편리함. 
-  배열과 객체의 값을 복사해서 또다른 변수 값에다가 할당하고자 할때 전개연산자 구문을 사용.

- 웹브라우저에 빨간색 경고창 : 리액트 실행을 전면적으로 중단시키겠다는 뜻이다. (서비스 중단)
- props 반드시 부모에서 자에게만 데이터를 줄 수 있음
- props의 자료형태는 반드시 객체의 타입
- props로 데이터를 받아올 때, 구조분해할당으로 통해서 바로 변수값으로 찾올 수 있음
(*이때 반드시 객체 내 key 네이밍과 동일한 변수명을 설정)
- 심지어 props는 컴포넌트로 전송이 가능함. (*단 컴포넌트를 전송할 때에는 key 값이 children으로 자동 설정됨)

- 동적인 변화가 발생되었을 때 이를 감지하고 업뎃을 해주어야 함. => data를 가공 편집 전송할 수 있음
 1) 사용자가 입력한 값 
 1-1) 사용자가 값을 입력했다는 사실을 인지해야함. ( 사용자로 인하여 상태가 업뎃되었다.) *state!!!!! 갑 활용해서 1-1)을 인지할 수 있다. 
 2) 사용자가 입력한 값을 가져온다. 

*state => 상태변화의 값을 컨트롤하기 위해서 리액트만의 문법 하나를 더 공부! (react Hooks)
 ㄴ> useState / useEffect / useContext / useRef ... 엄청 많다 .

















