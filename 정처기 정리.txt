- 정처기 정리

<소프트웨어 설계>

 · 소프트웨어 생명주기 : 소프트웨어 개발하기 위해 정의하고 운용, 유지보수 등 과정을 단계별로 나눈 것,   개발단계·주요활동·산출물 로 표현 = 수명주기라고도 한다. 

 · 소프트웨어 공학 (SE) : 우기 극복 방안 연구 학문, 소프트웨어 품질과 생산성 향상 목적 / 원칙 : 현대적인 프로그래밍 기술, 품질 유지되도록 검증, 결과에 대한 명확한 기록
 
 · 폭포수 모형 : 개발 이전 단계로 돌아갈 수 없다는 전제하에 각 단계에서 확실하게 매듭짓고 결과 철저하게 검토하여 다음 단계를 진행하는 방법론 - 가장 전통적인 생명주기 모형, 한단계 끝나야 다음단계로 넘어가는 선형 순차적 모형
  순서 (타당성 검토 -> 계획 -> 요구분석 -> 설계 -> 구현 -> 시험 -> 유지보수)

 · 나선형 모형(점진적 모형) : 보헴이 제안, 폭포수 + 프로토타입 모형의 장점에 위험 분석 기능 추가 , 위험을 관리하고 최소화하는 것이 목적, 개발 과정이 반복되므로 요구사항 첨가 가능, 정밀, 유지보수 과정 필요 없음. 
 순서 (계획 수립 -> 위험 분석 -> 개발 및 검증 -> 고객 평가)

 · 애자일 모형 : 민첩한, 기민한, 고객의 요구사항에 유연하게 대응할 수 있도록 일정한 주기 반복하여 개발 진행, 특정 개발 방법론 X, 고객과의 소통에 초점 맞춘 방법론, 핵심가치 4가지 (개인과 상호작용에, SW에, 고객과 협업, 변화에 반응 에 더 큰 가치를 둔다.)

 · 스크럼 : 팀이 중심이 되어 개발 효율성 높인다. 모든 것을 스스로 해결해야함. 제품 책임자(PO), 스크럼 마스터(SM) - 객관적인 시각에서 조언하는 가이드역할 팀원 통제하는 것이 목표가X · 스크럼 회의 주관 , 개발팀(DT) : 보통  7~8명으로 이루어짐. 

 · 스크럼 개발 프로세스 : 백로그 -> 스프린트 계획 -> 스프린트(실제 개발) -> 일일 스크럼 회의 -> 검토 -> 회고 

 · XP(eXtreme Programming) : 고객의 참여와 개발 과정 반복 극대화하여 개발 생산성 향상 
 5가지 핵심 가치 : 의사소통, 단순성, 용기, 존중, 피드백
 실천 방법 : Pair Programming, Collective Ownership, Test-Driven Development, Whole Team, Continuous Integration, Design Improvement또는 Refactoring, Small Releases

 · 운영체제(OS : Operating System) : 사용자가 컴퓨터를 편리하게 사용할 수 있도록 환경을 제공하는 소프트웨어
 종류 - Windows, UNIX, Linux, Mac Os 등, 모바일에는 iOS, Android
 요구사항 식별 시 고려사항 : 가용성, 성능, 기술 지원, 주변 기기, 구축 비용

 · DBMS(데이터베이스매니지먼트시스템) : 사용자의 요구에 따라 정보 생성 & 데이터베이스 관리해주는 소프트웨어 / 기존 파일 시스템이 갖는 종속성과 중복성의 문제 해결위해 제안된 시스템
 요구사항 식별 시 고려사항 : 가용성, 성능, 기술 지원, 상호 호환성, 구축 비용
 
 · WAS(웹 애플리케이션 서버) : 동적인 콘텐츠 처리를 위한 미들웨어, DB 서버와 연동해서 사용 

 · 요구사항 정의 : 기능 요구사항 (시스템의 활동, 어떤 기능, 데이터저장, 연산수행, 사용자가 시스템을 통해 제공받기를 원하는 기능) / 비기능 요구사항 

 · 요구사항 개발 프로세스 : 도출 -> 분석 -> 명세 -> 확인

 · 명세 기법  정형(수학적 원리, 모델 기반)-일관성, 정형화, 표기 어려워 사용자 이해X / 비정형 (상태 / 기능 / 객체)

 · DFD(자료 흐름도) :  자료 흐름 및 변환 과정과 기능을 도형중심으로 기술하는 방법 자료 흐름 그래프, 버블 차트라고도 한다. (프로세스, 자료 흐름, 자료 저장소, 단말)

 · DD(자료 사전) : DFD 자료를 자세히 기록, 데이터의 데이터 = 메타 데이터

 · 자동화 도구 : SADT(SoftTech), SREM(TRW 사가 우주 국방 시스템 그룹),PSL/PSA(미시간 대학), TAGS(시스템 공학 방법) 

 · HIPO : 시스템 분석, 설계나 문서화할 때 사용하는 기법, (가시적 도표, 총체적 도표, 세부적 도표)

 · UML : 시스템 개발자와 고객 또는 개발자 간의 의사소통이 원할하게 이루어지도록 표준화한 대표적인 객체지향 모델링 언어.  구성요소 : 사물, 관계, 다이어그램

 · 관계 : 연관, 집합, 포함, 일반화, 의존, 실체화

 · 다이어그램 : 사물의 관계를 도형으로 표현, 정적모델링에서는 구조적, 동적모델링에서는 행위 다이어그램 사용.
 - 구조적 : 클래스, 객체, 컴포넌트, 배치, 복합체 구조, 패키지
 - 행위 : 유스케이스, 순차, 커뮤니케이션, 상태, 활동, 상호작용 개요, 타이밍

