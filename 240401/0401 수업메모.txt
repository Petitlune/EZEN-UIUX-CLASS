<4월 수업 진행>

- 오전 : React.js
- 오후: HTML + CSS + JS / UI 구현

- UI생성을 위한 프론트앤드 & 퍼블리싱 영역의 대표적인 프레임워크 : vue.js / angluar.js
- 라이브러리는 기본적인 웹 표준언어를 활용할 수 있는 여지를 최대한 부여,  
   일부 기능에 한해서만 자신들만의 문법 체계를 활용 : React.js

- Angluar : MS /JS 프레임워크

- vue : 쉬움 / 기능 깊이 얕다
- React.js : 강력한 장점 3가지
1. 컴포넌트 기반 UI 구현 : ex)만약에 헤더와 풋터를 하나의 독립적인 파일 생성 html에서 js 사용할 때 스크립트 태그 사용해서 연동하듯이
 
2. 가상돔을 활용해서 엡데이트 구현
- DOM : 일종의 명세서 - 문서를 화면에 구현시키기 위해 사용된는 일종의 명세서이다. 
1) VS code : html, css, js를 작성(*문서)
2) 웹브라우저 : 문서 구현(* parse => fetch : rendering이 되었다. )
3) 컴퓨터 cpu, ram : DOM 
=> React가 실행함과 동시에 가상돔 2개 생성
첫번째 가상돔: 렌더링이 된 최초 시점의 UI를 기억하고 있는 명세서
두번째 가상돔: 첫번째 가상돔에서 업뎃이 된 최종시점의  UI를 기억하고 있는 명세서
 >첫번째와 두번째 가상돔을 비교해서 변경이 된 컴포넌트만 재빠르게 바꿔서 렌더링 시켜줌. 

3. CSR 방식을 활용해서 서버의 의존도를 낮춤. 
- 웹브라우저에서 상태가 변경 / 업데이트 
- 기존 전통적인 방식: SSR 방식 
- CSR 방식 : Client Side Rendering

(웹 브라우저가 읽을 수 있는 3대 언어 : html, css, js)
- react는 웹 브라우저의 언어가 아니다.(또 다른 생태계이다) 근데 어떻게 js를 사용할 수 있을까?
==> Node.js 덕분이다. ( Node.js는 V8 자바스크립트 엔진으로 구동되며, 웹 브라우저 바깥에서 자바스크립트 코드를 실행할 수 있다.)
- chorme 웹 브라우저 : V8 검색엔진
- npm i firebase
- npm : node package manager
- npm i 설치하고자하는 앱이름
- react는 Node.js에서도 VIP

npx라는 접두어로 설치가 되는 앱은 자동 업데이트가 됨. (npm는 자동 업데이트 안됨)
=> npx create-react-app

node_modules는 용량이 너무 큼 따라서 쌤이 올린거 다운 받을 때 git-pull 하고나서 터미널 켜고 npm i 입력해야한다. 그래야 파일 볼 수 있음.

react start 명령어로 시작하면 무조건 주소 http://172.16.105.10:3000  생성 (3000번으로 생성!!!)

- 웹 페이지 구현
- 웹앱 페이지 구현
- 웹페이지 UI/UX
> react native : 안드로이드 & iOS ==> flutter언어가 react native를 능가하기 시작했다. 
- 앱 => kotlin / babel

=> 요새 React.js에서 Next.js로 갈아타고 있다 .

컴포넌트는 99%확률로 반드시 대문자로 시작한다 .

SPA : Single Page Application
React를 한문장으로 표현: 컴포넌트 기반의 SPA으로 운영되는 CSR방식의 JS 라이브러리 입니다.

Module : Node.js : JS파일 컴포넌트 화 => 여기 저기서 사용!! => 모듈화로 전환
=> CommonJS 모듈 시스템 구축
CJS 모듈 시스템 
=> Ecmascript JS 모듈 시스템 표준
ESM 모듈 시스템 ( 우리가 배울 것은 이 방식이다 )

Component 문법 규칙!!
1) JSX 문법 : JS & XML 문법(extensible markup language = 유연한 html)

2) 변수 선언 : 숫자, 문자열, 논리, 배열, 객체, 함수 등 값. 
 *JSX 문법에서는 직접 사용할 수 없는 값이 존재! => 객체형 타입의 데이터는 직접 사용 불가
 마크업 규칙 필수 (닫는태그 무조건 존재해야함.)


3) 반드시 한개 이상의 부모요소가 존재해야 함.  