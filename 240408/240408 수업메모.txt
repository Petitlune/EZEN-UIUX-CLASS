*javascript 활용한 가위 바위 보 게임 => react로 만들어보기

==> 자료 구조 측면에서 본다 .

1. 사용자(=나)가 가위 바위 보 중 하나를 선택한다. (나의 의지) 
=> 이벤트 ( 버튼 // 클릭 이벤트) => 상태변화 업데이트(useState( ) 활용)

2. 컴퓨터도 가위 바위 보 중 하나를 선택한다.(random) 
=> js에서 random 함수 사용. => 수학객체를 가져온다.  Math => 0, 1, 2


3. 사용자와 컴퓨터 중 둘 중에 누가 이기고 졌는지 판단.
 => 사용자와 컴퓨터가 각각 선택한 값이 공통된 하나의 값에서 출력 관리가 되어야한다. 
 => 배열 

4. 결론
- 가위 바위 보 게임을 만들기 위해서 자료의 형태는 배열로 가야한다 .
- 배열 : 데이터의 순서를 정렬할 수 있는 장점. (단점. 복수의 데이터를 저장하거나 관리할 수 없다)
 > 결론 : 데이터를 객체로 관리하되 필요한 경우에 따라서 배열화할 수 있으면 좋다.

==> UI 구성을 어떻게 할 것인가. 
1. 버튼(*state 값 변화시켜주는 역할)
2. 출력 이미지 (*가위 바위 보) x 2개 => 내것 vs 컴퓨터(*state 값이 업뎃)
3. 2개의 그룹 = 2개의 컴포넌트로 분리
4. App => 2개의 컴포넌트 만들고  => props 관리

*react.js class 타입 컴포넌트만 존재

>객체 커스터마이징 생성!
>class : 붕어빵 틀
>객체 : 프로토타입
>객체 : 붕어빵(인스턴스)
==> 함수형 컴포넌트의 장점 리액트의 훅!

문제는 이전까지 작업해왔던 class 컴포넌트 사이트


1. 객체 기분 혹은 객체 지향 언언에서 Class가 필요한 이유
-  대다수의 Data가 객체 자료 형식을 갖기 마련.
-  반복적으로 사용되는 객체 자료 형식을 커스텀해서 사용. 
(굉장히 유사한 패턴을 갖고 있는 객체 자료를 다수 생성)

