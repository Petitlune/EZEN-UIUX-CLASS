*CSS3 속성

1)색상
-표현단위 : HEX코드 / 컬러네임 / rgb /rgba / hsl / hsla 
  =a는 투명도 결정 (0~1까지의 값)
-인간 : 숫자를 셀 때. 1~10 / 11~20 =>10진법
-컴퓨터 :16진법 => 총 16개의 숫자 단위를 활용해서 표현 
1~16 / 0~9, a~f
  =>바이너리코드형식
-컬러의 삼원색 =>3가지의 컬러의 조합으로 완성 (R G B) ##RRGGBB

-hsl = hue(색상)/ saturation(채도) / lightness(명도)
-hsla = a = alpha

2) url( ) :함수 =>오락실 게임기 >동전
( 매개변수 or 인수 or 인자값)

(*background {단축 속성 : 이미지, 위치, 색상 등 여러가지 속성값 지정 가능}
  background-image {이미지 속성만 지정 가능} * ====>추후에 배울 예정)

3)가시속성 : 가시성 
html태그 (block 태그 / inline 태그)

display: none;(공간, 영역, 존재 자체를 없다고 가정함)
visibility: hidden;(영역, 존재를 인정, 보이지만 않게 감추기)

display: inline-block => inline 속성은 가져가되 block 태그의 속성도 갖고싶다.
--> lnline : width와 height 값을 적용받지 않는다. / margin값는 좌우측 값만 적용 받는다. 
--> lnline - block : width와 height 값 모두 적용 / margin 값 상하 좌우측 모든 값을 적용

opacity : 태그의 투명도 조절(0~1까지)

4)박스속성 
-박스 안에 컨텐츠 & 박스 와의 관계를 잘 이해!!!

-margin : border 기준 바깥쪽 영역
-padding :border와 content 사이의 영역  
==> 이 둘은 위치를 지정해서 줄 수 있다. (상하좌우)
(값이 두개 : 상하. 좌우) (값이 세개 : 상 (좌우값) 하) (값이 네개 : 위쪽 기준 시계방향)

*box-sizing (실무에서는 border-box를 대부분 씀) *진짜진짜 중요*
-content-box : 안쪽에 정의해놓은 컨텐츠 사이즈 건드리지 않으면서 마진과 패딩 줌
-border box : 안쪽에 정의해놓은 컨텐츠 사이즈가 바깥쪽 보더를 기준으로 마진과 패딩 값에 따라서 가변적으로 변경되는 개념

5)테두리 속성
border : 3개의 속성을 하나로 합쳐서 사용하는게 일반적 (width/style/color)

bordr-radius : 좌 우측 양측면 모서리 둥글게
=>좌 탑에서 시계방향으로 움직일 수 있다. 

6)background 배경 속성 :

7)font 속성
-font-size : 폰트 크기 정의, large와 small은 거의 안씀
-font family : font 기업 제작 - 두껍게/얇게/중간
 ㄴ>외부에서 폰트 가져올 때
  1)구글 font : import + font family
  2)기업 및 브랜드 font : 홈페이지 개발자도구 > network > font 다운 > wofff를 ttf로 변환(goole에 검색해서 변환시킴)

8)Position(*위치)속성 --------중요!!!!!!
-절대 위치 좌표 : html 여러개 복수 태그가 삽입되었을 때, 
(원칙대로라면) 먼저 입력한 태그가 먼저 출력 => 무시 => 절대 위치값을 부여 => 적용!!!!
-상대 위치 좌표 : 상대 html 태그가 입력된 위치를 기준으로 내 위치값을 지정하겠다는 의미

-CSS3 Animation : 2D / 3D(공간감 존재)
->z-index로 맨 앞으로 끄집어 낼 수 있음
2D : x, y축
3D : x, y, z축

자식요소에 position : absoulute(*절대위치좌표)를 적용한 상태에서 해당 자식요소의 부모요소에게 position : relative(*상대위치좌표)를 적용하게 되면, 자식요소는 부모요소를 기준으로 절대위치좌표를 갖게 된다.

만약, html을 통해서 작성한 도형에 별도의 position값을 적용하지 않는다면, 기본 default 값은 어떤 position 속성이 적용되는 것일까?
position : static

9)float 속성 : 요새 별로 사용X, 알고는 있어야 함. => flex & grid가 나타나면서 사용빈도 줄어듦

10) shadow 속성 : 특정도형을 만들었을때 그림자를 적용!!!!!

-text shadow : 글자(*텍스트)에 그림자를 주고 싶을 때 사용 
-box shadow : 도형(*박스그룹)에 그림자를 주고 싶을 때 사용

11) Gradient 속성 :
- 서로 다른 복수의 컬러를 자연스럽게 연출

-webkit : 웹 브라우저마다 사용하는 방법이 다른경우 접두어로 입력해서 사용하도록 만들어놓은 문법체계 / 크로스 브라우징 /벤더 프리픽스 
-----> 추가적으로 좀더 알아보기(https://www.colorzilla.com/gradient-editor/)

Wire-frame : 어떤 화면을 UI로 구현하고자 할 때, 바로 화면에 코드 & 디자인을 하지 않는다.
=>WHY? 명확하게 정해놓은 size 및 color, layout이 존재하지 않을 경우 작업자의 업무 효율성이 떨어지기 때문!!!!!!!!!!!!!! => 설계도면을 만들어서 작업
-wire : 선
-frame : 구획

<UI 기획/개발 FM 프로세스>
1. 채색이 되지 않은 상태의 와이어프레이밍
>실제 런칭하고자 하는 서비스의 전체적인 느낌/컨셉을 보기 위해 함
2. 채색이 된 상태의 프로토타입을 만듦
>보다 구체적인 UI T&M(*색상/스타일)
>스타일 가이드 정의, 컴포넌트 
>타이포그래피(*폰트 서체/ 사이즈)
>로고(*BI / Sub BI MODE)
3. 퍼블리싱
>VS code : html & CSS활용 웹앱 레이아웃 얹힐 것인가
>Figma 롤을 활용해서 봤을 때와 실제 웹앱 화면에 구현
4.프론트엔드 개발
>버튼 클릭했을 때, 혹은 마우스를 오버했을 때 메뉴 나타나게
>외부 API 데이터를 가져와서 어떻게 출력하게 할 것인지.

피그마 커뮤니티에 다양한 소스 많음

