JS | TS 프로그래밍 코드를 작성

1) 함수형 = 선언형 방식(하이 레벨)
 > 개발자가 직접 알고리즘 매커니즘을 고민해서 코드를 커스트마이징해서 사용하는 방식

2) 명령형 = 그동안 우리가 사용했던 방식(로우 레벨)
 > 기존에 정형화되어있는 문법들을 가져다가 사용하는 방식

==> 자료구조 & 알고리즘 조금 이해
==> 데이터를 배열 / 객체
==> 왜 어떤 경우 배열? 객체?

< 1 ~ 100까지 숫자를 더한 결과값 도출 >

1) 명령형 imperative-sum.ts

1) 선언형 declarative-sum.ts
 : 고수의 경우는 선언형으로 대부분 코드를 작성

17. 배열  > map / filter / reduce

선언형 방식으로 기존 JS 배열 함수를 사용하는 방법 (*TS)

18. 선언형 방식을 활용해서 기존 배열 객체의 메서드 함수를 사용할때 유의사항!!!
  - TS에서는 선언형 방식으로 언제든 원할 때마다 배열의 메서드 함수를 가져다 쓸 수 없다 .
    > 선언형 방식의 코드 작성 방법은 반드시 "순수함수"인 경우에만 사용 가능. 
  - 순수함수가 되기 위한 전제조건 
  1) 함수 실행문 안에 입력문, 출력문이 존재 X
  2) 함수 실행문 안에서 외부에서 전달받은 매개변수의 값을 변경시키면 안됨. 
  3) 결과값이 바로 반환되어야함. 
  4) 외부에서 생성된 전역변수 절대 사용 X
  5) Promise 같은 비동기 방식으로 작동하는 코드가 없어야 함.

* 세미코루틴 / 스레드 / 코루틴 / CPU / 운영체제 

19. 튜플




